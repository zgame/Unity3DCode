
-------------------------------------------------------------------------------------------
--- 战斗总体逻辑流程
-------------------------------------------------------------------------------------------

-- 调试用
local function BattleRunLog(str)
    --local debug = true
    local debug = false
    if debug then
        print(str)
    end
end

-------------------------相机------------------------------
-- 获取一个玩家角色目标
local function BattleGetCharacter()
    if BattleCharacterList[3] then
        return BattleCharacterList[3]    -- 中间位置
    end
    if BattleCharacterList[2] then
        return BattleCharacterList[2]   -- 中间靠左
    end
    if BattleCharacterList[4] then
        return BattleCharacterList[4]   -- 中间靠右
    end
    if BattleCharacterList[1] then
        return BattleCharacterList[1]   -- 左侧
    end
    if BattleCharacterList[5] then
        return BattleCharacterList[5]    -- 右侧
    end
end

-- 设定相机
local function BattleCamera()

    -- 设定相机跟踪中间位置的角色
    local camera = CSFindGameObject("CMFollowCenter")
    if camera then
        BattleRunLog("设定跟踪相机"..camera.name)
        local followCamera = camera:GetComponent(typeof(CS.Cinemachine.CinemachineVirtualCamera))
        followCamera.Follow = BattleGetCharacter().Model.transform       -- 绑定到中间位置的角色上面去
    end

    local camera2 = CSFindGameObject("CMFreeLook")
    if camera2 then
        BattleRunLog("设定玩家控制旋转角度相机"..camera2.name)
        local freelookCamera = camera2:GetComponent(typeof(CS.Cinemachine.CinemachineFreeLook))
        freelookCamera.LookAt = BattleGetCharacter().Model.transform       -- 绑定到中间位置的角色上面去
        freelookCamera.Follow = BattleGetCharacter().Model.transform       -- 绑定到中间位置的角色上面去
    end

    local camera3 = CSFindGameObject("CMDollyTrack")
    if camera3 then
        BattleRunLog("自动旋转角度相机"..camera3.name)
        local dollyCamera = camera3:GetComponent(typeof(CS.Cinemachine.CinemachineVirtualCamera))
        dollyCamera.LookAt = BattleGetCharacter().Model.transform       -- 绑定到中间位置的角色上面去
        local dolly = CSFindGameObject("Dolly")
        dolly.transform.localPosition = CS.UnityEngine.Vector3(0, 0, 35)
    end
end

--------------------------角色--------------------------------------
--  生成玩家私有分支函数


-- 生成玩家
local function BattleCreatePlayer()
    if #BattleCharacterList == 0 then
        BattleRunLog("BattleCreatePlayer")
        local function _battleCreateCharacter(name, ai, speed, attackRange, offsetZ)
            local character = Character:new()
            character:LoadGameObject(name)
            character.Speed = speed
            character.AttackRange = attackRange
            character.Enable = true         -- 激活玩家角色
            character:BTRootInit(ai)
            character.Model.transform.localPosition = CS.UnityEngine.Vector3(offsetZ, 0, 0)

            CreateBattleUIHPSlider(character)        -- 血条
            
            table.insert(BattleCharacterList, character)
            return character
        end

        local character = nil
        -- 生成最左侧的
        _battleCreateCharacter("Bloodelf","Lua/Battle/btJson/BattleCharacter" ,2.1,10, -4 )
        -- 生成左二
        _battleCreateCharacter("Dwarf","Lua/Battle/btJson/BattleCharacter" ,2.2,5, -2 )
        -- 生成中间位置
        character =_battleCreateCharacter("Tauren","Lua/Battle/btJson/BattleCharacter" ,2.5,5, 0 )
        
        -- 生成右二
         _battleCreateCharacter("Human","Lua/Battle/btJson/BattleCharacter" ,2.3,5, 2 )
        -- 生成最右侧的
         _battleCreateCharacter("Gnome","Lua/Battle/btJson/BattleCharacter" ,2,10, 4 )
        
        character.Debug = true

        BattleCamera()  -- 生成相机
    else
        -- 不用重新生成， 刷新一下状态即可    
    end
    return true
end

-------------------------敌人------------------------------


-- 生成敌人
local function BattleCreateEnemy()
    if #BattleEnemyList == 0 then
        BattleRunLog("BattleCreateEnemy")

        -- 生成敌人私有分支函数
        local function _battleCreateMonster(name, ai, speed, attackRange, offsetX)
            --local enemyAway = -80  -- 敌人的生成位置距离
            local mon = Monster:new()
            mon:LoadGameObject(name)
            mon.Speed = speed
            mon.AttackRange = attackRange
            mon:BTRootInit(ai)
            local rand_x = math.random(-10,10)
            local rand_z = math.random(-10,10)
            mon.Model.transform.localPosition = CS.UnityEngine.Vector3( rand_x + offsetX, 0, BattleAreaEnemyAway  + rand_z)
            --mon.Debug = true
            CreateBattleUIHPSlider(mon)        -- 血条
            table.insert(BattleEnemyList, mon)
            return mon
        end
        _battleCreateMonster("Goutouren01","Lua/Battle/btJson/BattleMonster" ,0.2,5, 1 )
        _battleCreateMonster("Goutouren02","Lua/Battle/btJson/BattleMonster" ,0.2,5, -1 )
        _battleCreateMonster("Yurenfashi","Lua/Battle/btJson/BattleMonster" ,0.5,5, 3 )
        local mon = _battleCreateMonster("Yurenzhanshi","Lua/Battle/btJson/BattleMonster" ,0.5,5, -3 )
        --mon.Debug = true
    else
        -- 敌人没有全部消灭
        BattleRunLog("敌人没有全部消灭")
    end
    
        
    return true
end

-------------------------------------------------------------------------------------------------------------

-- 玩家跑
local function BattlePlayerRun()
    BattleRunLog("BattlePlayerRun")

    if BattleGetCharacter().Model.transform.localPosition.z > BattleAreaRunDistance then
        -- 跑到战斗区域了
        BattleRunLog("进入战斗区域")
        return true
    end
    
    return false
end

-- 进入战斗区域
local function BattleStartAttackRing()
    BattleRunLog("BattleStartAttackRing")
    return true
end

-- 敌人开始进攻
local function BattleEnemyAttack()
    BattleRunLog("BattleEnemyAttack")
    for i in ipairs(BattleEnemyList)do
        BattleEnemyList[i].Enable = true   -- 激活所有敌人
        -- 敌人开始寻找玩家角色攻击
        BattleEnemyList[i]:FindNearEnemy()
    end
    for i in ipairs(BattleCharacterList)do
        --BattleCharacterList[i].Enable = true   -- 激活所有玩家
        -- 开始寻找敌人攻击
        BattleCharacterList[i]:FindNearEnemy()
    end
    return true
end

-- 敌人全灭
local function BattleEnemyAllDead()
    BattleRunLog("Check BattleEnemyAllDead")
    if #BattleEnemyList == 0 then
        BattleRunLog("敌人全歼")
        return true     
    end
    return false
end

-- 胜利动画
local function BattleWin()
    BattleRunLog("BattleWin")
    
    
    -- 重置玩家角色的一些数值
    
    -- 恢复满玩家的血量，还有复活，更新血条显示
    for i in ipairs(BattleCharacterList) do
        BattleCharacterList[i].HP = BattleCharacterList[i].MaxHP
        BattleCharacterList[i].playerState = StateIdle
        BattleUIHPSliderShow(BattleCharacterList[i])
    end
    
    -- 生成下一关数据
    BattleAreaRunDistance = BattleAreaRunDistance + BattleAreaEnemyAwayAddNext
    BattleAreaEnemyAway = BattleAreaEnemyAway + BattleAreaEnemyAwayAddNext
    return true
end




-------------------------------绑定关系-----------------------------------------

function BattleInit(file)
    local binder = {
        BattleCreatePlayer = BattleCreatePlayer,
        BattleCreateEnemy = BattleCreateEnemy,
        BattlePlayerRun = BattlePlayerRun,
        BattleStartAttackRing = BattleStartAttackRing,
        BattleEnemyAttack = BattleEnemyAttack,
        BattleEnemyAllDead = BattleEnemyAllDead,
        BattleWin = BattleWin,
    }
    local btroot = bt.LoadFromLua(file, binder)
    btroot:activate(binder)
    return btroot
end

function BattleUpdate(dt, btroot)
    BattleRunLog("---------------------------------------------BattleUpdate--------------------------------------------------------------")
    --BattleRunLog("玩家有几个活着"..#BattleCharacterList)
    --BattleRunLog("敌人有几个活着"..#BattleEnemyList)
    if btroot:evaluate() then
        btroot:tick(dt)
    end
end

