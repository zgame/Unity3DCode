

--------------------------------------------------------------------------------------
--- 玩家的角色
--------------------------------------------------------------------------------------
Character = class("Character",CommonCharacter)

-- 加载模型和动画
function Character:LoadGameObject(name)
    self.Name = name
    self.Model = CSLoadAndInstantiatePrefabGameObject(AssetCharacterPath.."/"..name,AssetCharacterPath.."/"..name)
    --local animator1 = monster1:GetComponent(typeof(CS.UnityEngine.Animator))
    self.Animator =  self.Model:GetComponentInChildren(typeof(CS.UnityEngine.Animator))
end


-- 有没有敌人
function Character:CheckEnemyNotExist()
    
    if #BattleEnemyList == 0 then
        self:Log("没有敌人")
        return true
    else
        self:Log("敌人存在")
        return false
    end
end



-- 敌人是否活着
function Character:CheckEnemyLive()
    BattleUIHPSliderPosition(self)

    if self.Enemy == nil then
        if #BattleEnemyList == 0 then
            self:Log("没有活着的敌人")
            return false  -- 没有活着的敌人
        else
            self:Log("没有目标，开始寻找新的目标")
            self:FindNearEnemy()
        end

    end
    if self.Enemy ~= nil and self.Enemy.PlayerState == StateDead then
        self:Log("目标敌人已死，开始寻找新的敌人目标")
        self:FindNearEnemy()
    end

    return true
end


-- 往目的地跑过去
function Character:PlayerRun()

    if self.PlayerState == StateIdle then
        self.PlayerState = StateRun
        self.Animator:SetTrigger("run")
    end

    if self.PlayerState == StateRun then
        self:Log(self.Name .. "跑步ing，距离:" .. self.Distance)
        
        if self.Distance > self.AttackRange then
            
            -- doTween 来移动角色
            local tween = self.Model.transform:DOMove(CS.UnityEngine.Vector3(self.Model.transform.localPosition.x - self.Speed , self.Model.transform.localPosition.y, self.Model.transform.localPosition.z ),BattleAICharacterLoopTimer)

            local ran = math.random(5)
            if ran == 1 then
                tween:SetEase(CS.DG.Tweening.Ease.InOutCubic)       -- 设定移动方式
            elseif ran == 2 then
                tween:SetEase(CS.DG.Tweening.Ease.OutSine)       -- 设定移动方式
            elseif ran == 3 then
                tween:SetEase(CS.DG.Tweening.Ease.InSine)       -- 设定移动方式
            elseif ran == 4 then
                tween:SetEase(CS.DG.Tweening.Ease.InQuad)       -- 设定移动方式
            elseif ran == 5 then
                tween:SetEase(CS.DG.Tweening.Ease.OutQuad)       -- 设定移动方式
            end
        end
    end

    return false
    
end

---------------------------------------攻击-----------------------------------------
-- 玩家普通攻击
function Character:PlayerAttack()
    self:Log("PlayerAttack    state: "..self.PlayerState)
    
    if self.PlayerState == StateIdle then
        --EnemyHP = EnemyHP - Damage
        self:Log("我方角色 [  普通攻击  ]，剩余血量"..self.Enemy.HP)
        --self.Animator:SetTrigger("stoprun")
        self.Animator:SetTrigger("attack")
        self.PlayerState = StateAttack
        if self.Name == "Human" then
            CreateBattleEffect(self,"Attack")
        end

        self.Enemy.UnderAttack = true
        self.Enemy.HP = self.Enemy.HP - 11
        BattleUIHPSliderShow(self.Enemy)
        BattleUIDamageNumber(self.Enemy.Model, 11)        

        
        return false
    end
    
    if self.PlayerState == StateAttack then
        return self:AnimatorPlayEnd("Attack", true)
    end

end


-- 玩家释放技能
function Character:PlayerSkillAttack()

    self:Log("PlayerSkillAttack")
    if self.PlayerState == StateIdle then
        --EnemyHP = EnemyHP - SkillDamage
        self:Log("敌人被[ 技能 ]打了，剩余血量"..self.Enemy.HP)
        self.Animator:SetTrigger("sp1")
        self.PlayerState = StateSkill
        if self.Name == "Human" then
            CreateBattleEffect(self,"Skill01")
        end
        self.Enemy.UnderAttack = true
        self.Enemy.HP = self.Enemy.HP - 12
        BattleUIHPSliderShow(self.Enemy)
        BattleUIDamageNumber(self.Enemy.Model, 12)
        return false
    end

    if self.PlayerState == StateSkill then
        return  self:AnimatorPlayEnd("Skill01",true)
    end
end


-- 玩家释放技能
function Character:PlayerSkillAttack2()

    self:Log("PlayerSkillAttack2")
    if self.PlayerState == StateIdle then
        --EnemyHP = EnemyHP - SkillDamage
        self:Log("敌人被[ 技能2 ]打了，剩余血量"..self.Enemy.HP)
        self.Animator:SetTrigger("sp2")
        self.PlayerState = StateSkill
        if self.Name == "Human" then
            CreateBattleEffect(self,"Skill02")
        end
        self.Enemy.UnderAttack = true
        self.Enemy.HP = self.Enemy.HP - 13
        BattleUIHPSliderShow(self.Enemy)
        BattleUIDamageNumber(self.Enemy.Model, 13)
        return false
    end

    if self.PlayerState == StateSkill then
        return  self:AnimatorPlayEnd("Skill02",true)
    end
end



---------------------------------------死亡-----------------------------------------
-- 玩家死亡
function Character:PlayerDead()
    self:Log("PlayerDead")
    if self.PlayerState ~= StateDead then
        self:Log("玩家 死了")
        self.Animator:SetTrigger("dead")
        self.PlayerState = StateDead
        return false
    end

    if self.PlayerState == StateDead then
        --return  self:AnimatorPlayEnd("Death",false)
        -- 以后在这里处理复活， 等2秒然后销毁怪物尸体等行为
    end
end




-- 找到附近的敌人
function Character:FindNearEnemy()
    self.Log("玩家开始找附近的新敌人")
    self.super.FindNearEnemy(self,BattleEnemyList)
    --if #BattleEnemyList == 0 then
    --    self.Log("找不到敌人")
    --    return 
    --end
    --
    --local dis = 1000  -- 距离
    --local lock = BattleEnemyList[1]  -- 锁定
    --for i in ipairs(BattleEnemyList)do
    --    if BattleEnemyList[i].PlayerState ~= StateDead then
    --        local now_dis = GetVector3Distance(BattleEnemyList[1].Model.transform.localPosition, self.Model.transform.localPosition)
    --        if now_dis < dis then
    --            dis = now_dis
    --            lock = BattleEnemyList[i]
    --            self.Log("距离"..dis.."      锁定"..lock.Name)
    --        end
    --    end
    --end
    --
    --self.Enemy = lock
end
